import { useState } from 'react';
import { Shield, Target, Search, AlertTriangle, FileText, Terminal } from 'lucide-react';
import { Card } from '@/components/ui/card';
import { Button } from '@/components/ui/button';
import { Input } from '@/components/ui/input';
import { Badge } from '@/components/ui/badge';
import { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';
import { ReconModule } from './pentest/ReconModule';
import { ScanningModule } from './pentest/ScanningModule';
import { VulnAnalysis } from './pentest/VulnAnalysis';
import { ReportModule } from './pentest/ReportModule';

export const PentestDashboard = () => {
  const [target, setTarget] = useState('');
  const [activePhase, setActivePhase] = useState('recon');

  const phases = [
    { id: 'recon', name: 'Reconnaissance', icon: Search, color: 'cyber-blue' },
    { id: 'scanning', name: 'Scanning', icon: Target, color: 'cyber-green' },
    { id: 'analysis', name: 'Vulnerability Analysis', icon: AlertTriangle, color: 'warning' },
    { id: 'report', name: 'Reporting', icon: FileText, color: 'muted' }
  ];

  return (
    <div className="min-h-screen bg-background cyber-grid">
      {/* Header */}
      <header className="border-b border-border bg-card/50 backdrop-blur-sm">
        <div className="container mx-auto px-6 py-4">
          <div className="flex items-center justify-between">
            <div className="flex items-center space-x-3">
              <Shield className="h-8 w-8 text-primary cyber-glow" />
              <div>
                <h1 className="text-2xl font-bold text-foreground glitch">StealthyScope</h1>
                <p className="text-sm text-muted-foreground">Professional Penetration Testing Suite</p>
              </div>
            </div>
            <div className="flex items-center space-x-4">
              <Badge variant="outline" className="pulse-cyber">
                <Terminal className="h-3 w-3 mr-1" />
                ACTIVE
              </Badge>
            </div>
          </div>
        </div>
      </header>

      {/* Target Input */}
      <div className="container mx-auto px-6 py-6">
        <Card className="terminal mb-6">
          <div className="flex items-center space-x-4">
            <div className="flex-1">
              <label className="block text-sm font-medium text-foreground mb-2">
                Target Domain/IP
              </label>
              <Input
                type="text"
                value={target}
                onChange={(e) => setTarget(e.target.value)}
                placeholder="example.com or 192.168.1.1"
                className="bg-background border-border text-foreground font-mono"
              />
            </div>
            <Button 
              className="mt-6 cyber-glow"
              disabled={!target}
            >
              Initialize Scan
            </Button>
          </div>
        </Card>

        {/* Phase Navigation */}
        <div className="grid grid-cols-4 gap-4 mb-6">
          {phases.map((phase) => {
            const Icon = phase.icon;
            const isActive = activePhase === phase.id;
            
            return (
              <Card 
                key={phase.id}
                className={`cursor-pointer transition-all duration-300 ${
                  isActive ? 'bg-primary/10 border-primary cyber-glow' : 'hover:bg-card/80'
                }`}
                onClick={() => setActivePhase(phase.id)}
              >
                <div className="p-4 text-center">
                  <Icon className={`h-8 w-8 mx-auto mb-2 ${
                    isActive ? 'text-primary' : 'text-muted-foreground'
                  }`} />
                  <h3 className="font-medium text-sm">{phase.name}</h3>
                </div>
              </Card>
            );
          })}
        </div>

        {/* Main Content */}
        <Tabs value={activePhase} onValueChange={setActivePhase}>
          <TabsContent value="recon" className="space-y-6">
            <ReconModule target={target} />
          </TabsContent>
          
          <TabsContent value="scanning" className="space-y-6">
            <ScanningModule target={target} />
          </TabsContent>
          
          <TabsContent value="analysis" className="space-y-6">
            <VulnAnalysis target={target} />
          </TabsContent>
          
          <TabsContent value="report" className="space-y-6">
            <ReportModule target={target} />
          </TabsContent>
        </Tabs>
      </div>
    </div>
  );
};