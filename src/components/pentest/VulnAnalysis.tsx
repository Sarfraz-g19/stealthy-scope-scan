import { useState } from 'react';
import { Bug, AlertTriangle, Shield, Zap, Clock, ExternalLink } from 'lucide-react';
import { Card } from '@/components/ui/card';
import { Button } from '@/components/ui/button';
import { Badge } from '@/components/ui/badge';
import { Separator } from '@/components/ui/separator';

interface VulnAnalysisProps {
  target: string;
}

export const VulnAnalysis = ({ target }: VulnAnalysisProps) => {
  const [isScanning, setIsScanning] = useState(false);
  const [results, setResults] = useState({
    vulnerabilities: [],
    webVulns: [],
    summary: null
  });

  const mockVulnResults = {
    vulnerabilities: [
      {
        id: "CVE-2023-32233",
        title: "Linux Kernel Netfilter Use-After-Free",
        severity: "critical",
        cvss: 9.8,
        service: "Linux Kernel",
        port: "N/A",
        description: "A use-after-free vulnerability in the Linux kernel's netfilter subsystem allows local privilege escalation.",
        recommendation: "Update kernel to version 6.3.1 or later",
        references: ["https://nvd.nist.gov/vuln/detail/CVE-2023-32233"]
      },
      {
        id: "CVE-2023-25690",
        title: "Apache HTTP Server mod_proxy HTTP Response Splitting",
        severity: "high",
        cvss: 7.5,
        service: "Apache httpd",
        port: "80, 443",
        description: "HTTP response splitting vulnerability in Apache HTTP Server's mod_proxy module.",
        recommendation: "Upgrade Apache to version 2.4.56 or later",
        references: ["https://httpd.apache.org/security/vulnerabilities_24.html"]
      },
      {
        id: "CVE-2023-2975",
        title: "OpenSSH SSH-2.0 Protocol Version Information Disclosure",
        severity: "medium",
        cvss: 5.3,
        service: "OpenSSH",
        port: "22",
        description: "OpenSSH discloses version information that could aid attackers.",
        recommendation: "Configure SSH banner settings to minimize information disclosure",
        references: ["https://www.openssh.com/security.html"]
      }
    ],
    webVulns: [
      {
        type: "SQL Injection",
        url: "/admin/login.php?id=1",
        method: "GET",
        parameter: "id",
        severity: "critical",
        payload: "1' OR '1'='1",
        evidence: "MySQL error: You have an error in your SQL syntax"
      },
      {
        type: "Cross-Site Scripting (XSS)",
        url: "/search.php",
        method: "POST",
        parameter: "query",
        severity: "high",
        payload: "<script>alert('XSS')</script>",
        evidence: "Script executed in response"
      },
      {
        type: "Directory Traversal",
        url: "/files/download.php",
        method: "GET",
        parameter: "file",
        severity: "high",
        payload: "../../../etc/passwd",
        evidence: "root:x:0:0:root:/root:/bin/bash"
      }
    ],
    summary: {
      total: 6,
      critical: 2,
      high: 3,
      medium: 1,
      low: 0,
      riskScore: 8.7
    }
  };

  const runVulnScan = async () => {
    setIsScanning(true);
    // Simulate vulnerability scanning
    await new Promise(resolve => setTimeout(resolve, 4000));
    setResults(mockVulnResults);
    setIsScanning(false);
  };

  const getSeverityColor = (severity: string) => {
    switch (severity.toLowerCase()) {
      case 'critical': return 'text-destructive';
      case 'high': return 'text-orange-500';
      case 'medium': return 'text-warning';
      case 'low': return 'text-primary';
      default: return 'text-muted-foreground';
    }
  };

  const getSeverityBadge = (severity: string) => {
    switch (severity.toLowerCase()) {
      case 'critical': return 'bg-destructive text-destructive-foreground danger-glow';
      case 'high': return 'bg-orange-500/20 text-orange-500';
      case 'medium': return 'bg-warning/20 text-warning';
      case 'low': return 'bg-primary/20 text-primary';
      default: return 'bg-muted text-muted-foreground';
    }
  };

  const scanModules = [
    { name: "CVE Database Scan", desc: "Known vulnerability detection", icon: Bug },
    { name: "Web Application Security", desc: "OWASP Top 10 testing", icon: Zap },
    { name: "Configuration Analysis", desc: "Security misconfigurations", icon: Shield },
    { name: "Network Vulnerabilities", desc: "Service-specific exploits", icon: AlertTriangle }
  ];

  return (
    <div className="space-y-6">
      <Card className="terminal">
        <div className="flex items-center justify-between mb-4">
          <h2 className="text-xl font-bold text-primary">Vulnerability Analysis</h2>
          <Button 
            onClick={runVulnScan}
            disabled={!target || isScanning}
            className={`${isScanning ? 'blue-glow' : 'cyber-glow'}`}
          >
            {isScanning ? (
              <>
                <Clock className="h-4 w-4 mr-2 animate-spin" />
                Analyzing...
              </>
            ) : (
              'Start Vulnerability Scan'
            )}
          </Button>
        </div>

        {/* Scan Modules */}
        <div className="grid grid-cols-2 md:grid-cols-4 gap-4 mb-6">
          {scanModules.map((module) => {
            const Icon = module.icon;
            return (
              <Card key={module.name} className="p-4 bg-secondary/50 hover:bg-secondary/70 transition-colors">
                <Icon className="h-6 w-6 text-primary mb-2" />
                <h3 className="font-medium text-sm">{module.name}</h3>
                <p className="text-xs text-muted-foreground">{module.desc}</p>
              </Card>
            );
          })}
        </div>

        {/* Results */}
        {results.summary && (
          <div className="space-y-6">
            <h3 className="text-lg font-semibold text-primary">Vulnerability Assessment Results</h3>
            
            {/* Summary Dashboard */}
            <Card className="bg-secondary/30 border-l-4 border-l-primary">
              <div className="p-6">
                <h4 className="font-semibold mb-4 text-foreground">Risk Summary</h4>
                <div className="grid grid-cols-2 md:grid-cols-5 gap-4">
                  <div className="text-center">
                    <div className="text-2xl font-bold text-destructive">{results.summary.critical}</div>
                    <div className="text-sm text-muted-foreground">Critical</div>
                  </div>
                  <div className="text-center">
                    <div className="text-2xl font-bold text-orange-500">{results.summary.high}</div>
                    <div className="text-sm text-muted-foreground">High</div>
                  </div>
                  <div className="text-center">
                    <div className="text-2xl font-bold text-warning">{results.summary.medium}</div>
                    <div className="text-sm text-muted-foreground">Medium</div>
                  </div>
                  <div className="text-center">
                    <div className="text-2xl font-bold text-primary">{results.summary.low}</div>
                    <div className="text-sm text-muted-foreground">Low</div>
                  </div>
                  <div className="text-center">
                    <div className="text-2xl font-bold text-foreground">{results.summary.total}</div>
                    <div className="text-sm text-muted-foreground">Total</div>
                  </div>
                </div>
                <Separator className="my-4" />
                <div className="flex items-center justify-between">
                  <span className="text-sm text-muted-foreground">Overall Risk Score</span>
                  <Badge className={`text-lg px-3 py-1 ${
                    results.summary.riskScore >= 8 ? 'danger-glow bg-destructive' : 
                    results.summary.riskScore >= 6 ? 'bg-orange-500/20 text-orange-500' :
                    'bg-warning/20 text-warning'
                  }`}>
                    {results.summary.riskScore}/10
                  </Badge>
                </div>
              </div>
            </Card>

            {/* CVE Vulnerabilities */}
            <Card className="bg-secondary/30 border-l-4 border-l-destructive">
              <div className="p-4">
                <h4 className="font-semibold mb-3 text-foreground flex items-center">
                  <Bug className="h-4 w-4 mr-2" />
                  Known Vulnerabilities (CVEs)
                </h4>
                <div className="space-y-3">
                  {results.vulnerabilities.map((vuln, index) => (
                    <Card key={index} className="bg-card/50 p-4 border-l-2 border-l-transparent hover:border-l-primary transition-all">
                      <div className="space-y-2">
                        <div className="flex items-start justify-between">
                          <div className="flex-1">
                            <div className="flex items-center space-x-2 mb-1">
                              <Badge variant="outline" className="font-mono text-xs">
                                {vuln.id}
                              </Badge>
                              <Badge className={getSeverityBadge(vuln.severity)}>
                                {vuln.severity.toUpperCase()}
                              </Badge>
                              <span className="text-sm text-muted-foreground">CVSS: {vuln.cvss}</span>
                            </div>
                            <h5 className="font-medium text-foreground">{vuln.title}</h5>
                            <div className="text-sm text-muted-foreground mt-1">
                              Service: <span className="font-mono">{vuln.service}</span> | 
                              Port: <span className="font-mono">{vuln.port}</span>
                            </div>
                          </div>
                        </div>
                        <p className="text-sm text-muted-foreground">{vuln.description}</p>
                        <div className="bg-primary/10 border border-primary/20 p-2 rounded">
                          <div className="text-xs text-muted-foreground mb-1">Recommendation:</div>
                          <div className="text-sm text-foreground">{vuln.recommendation}</div>
                        </div>
                        <div className="flex items-center space-x-2">
                          {vuln.references.map((ref, refIndex) => (
                            <a 
                              key={refIndex}
                              href={ref} 
                              target="_blank" 
                              rel="noopener noreferrer"
                              className="text-xs text-primary hover:underline flex items-center"
                            >
                              Reference <ExternalLink className="h-3 w-3 ml-1" />
                            </a>
                          ))}
                        </div>
                      </div>
                    </Card>
                  ))}
                </div>
              </div>
            </Card>

            {/* Web Application Vulnerabilities */}
            <Card className="bg-secondary/30 border-l-4 border-l-orange-500">
              <div className="p-4">
                <h4 className="font-semibold mb-3 text-foreground flex items-center">
                  <Zap className="h-4 w-4 mr-2" />
                  Web Application Vulnerabilities
                </h4>
                <div className="space-y-3">
                  {results.webVulns.map((vuln, index) => (
                    <Card key={index} className="bg-card/50 p-4 border-l-2 border-l-transparent hover:border-l-primary transition-all">
                      <div className="space-y-2">
                        <div className="flex items-center justify-between">
                          <div className="flex items-center space-x-2">
                            <h5 className="font-medium text-foreground">{vuln.type}</h5>
                            <Badge className={getSeverityBadge(vuln.severity)}>
                              {vuln.severity.toUpperCase()}
                            </Badge>
                          </div>
                        </div>
                        <div className="text-sm text-muted-foreground">
                          <div className="font-mono bg-secondary/50 p-2 rounded">
                            {vuln.method} {vuln.url}
                          </div>
                        </div>
                        <div className="grid grid-cols-1 md:grid-cols-2 gap-2 text-sm">
                          <div>
                            <span className="text-muted-foreground">Parameter:</span>
                            <span className="ml-2 font-mono text-foreground">{vuln.parameter}</span>
                          </div>
                          <div>
                            <span className="text-muted-foreground">Payload:</span>
                            <span className="ml-2 font-mono text-primary">{vuln.payload}</span>
                          </div>
                        </div>
                        <div className="bg-destructive/10 border border-destructive/20 p-2 rounded">
                          <div className="text-xs text-muted-foreground mb-1">Evidence:</div>
                          <div className="text-sm font-mono text-foreground">{vuln.evidence}</div>
                        </div>
                      </div>
                    </Card>
                  ))}
                </div>
              </div>
            </Card>
          </div>
        )}
      </Card>
    </div>
  );
};